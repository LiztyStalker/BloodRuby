//------------------------------------------------------------------------------
// <auto-generated>
//     이 코드는 도구를 사용하여 생성되었습니다.
//     런타임 버전:4.0.30319.36373
//
//     파일 내용을 변경하면 잘못된 동작이 발생할 수 있으며, 코드를 다시 생성하면
//     이러한 변경 내용이 손실됩니다.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using UnityEngine;
using System.Linq;


//A0.8
public class TextInfoFactoryClass : SingletonClass<TextInfoFactoryClass>
{



	Dictionary <string, TextInfoClass> m_textInforDic = new Dictionary<string, TextInfoClass> ();


	public TextInfoFactoryClass(){
		initParse ();
	}


	void initParse(){
		TextAsset tAsset = Resources.Load<TextAsset> (PrepClass.getLanguagePath(PrepClass.textDataPath));

		if (tAsset != null) {
			string[] splitList = tAsset.text.Split ('\n');

			foreach (string splitStr in splitList) {
				string[] data = splitStr.Split ('\t');
				if (data.Length == TextInfoClass.Count) {
					TextInfoClass textInfo = new TextInfoClass (data [0], data [1], data [2], data [3]);
					m_textInforDic.Add (data [1], textInfo);
					Debug.Log ("textInfo : " + data [0]);
				}
			}

		} else {
			Debug.LogError (PrepClass.textDataPath + " is not Found");
		}
	}




	/// <summary>
	/// 텍스트 정보 가져오기
	/// </summary>
	/// <returns>The text info.</returns>
	/// <param name="key">Key.</param>
//	public TextInfoClass getTextInfo(string name){
////		if (m_textInforDic.Count > 0) {
////			if (m_textInforDic.ContainsKey (key)) {
////				return m_textInforDic [key];
////			}
////		}
////		return null;
//	
//		if (m_textInforDic.Count > 0) {
//			return m_textInforDic.Values.Where (textData => textData.name == name [1]).SingleOrDefault ();
//
//		}
//		return null;
//	
//	}

	/// <summary>
	/// 오브젝트 이름으로 가져오기
	/// </summary>
	/// <returns>The text info.</returns>
	/// <param name="gameobj">GameObject.</param>
	public TextInfoClass getTextInfo(string name){
		if (m_textInforDic.Count > 0) {
			string[] names = name.Split ('@');
			Debug.Log (names [1]);

			if (m_textInforDic.ContainsKey (names [1])) {
				return m_textInforDic [names [1]];
			}

//			return m_textInforDic.Values.Where (textData => textData.prefebName == names [1]).SingleOrDefault ();
		}
		return null;
	}
}



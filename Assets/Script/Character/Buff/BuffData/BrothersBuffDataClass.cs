//------------------------------------------------------------------------------
// <auto-generated>
//     이 코드는 도구를 사용하여 생성되었습니다.
//     런타임 버전:4.0.30319.36373
//
//     파일 내용을 변경하면 잘못된 동작이 발생할 수 있으며, 코드를 다시 생성하면
//     이러한 변경 내용이 손실됩니다.
// </auto-generated>
//------------------------------------------------------------------------------
using System.Collections;
using UnityEngine;
public class BrothersBuffDataClass : BuffDataClass
{

//	[SerializeField] float m_areaRange;
	[SerializeField] int m_maxCount;
	//[SerializeField] float m_attackPercent;
//	int m_hitCount = 0;


//	void Awake(){
//		buffStateSet(TYPE_BUFF_STATE.COUNT);
////		Debug.Log ("valueState : " + valueState.Length);
//	}
	
	
	protected override void Start(){
		//Debug.Log ("Start : " + GetInstanceID());
		GetComponent<CircleCollider2D>().radius = range;
		base.Start ();
//		startCoroutine (-1f, null);
	}
	
//	public override bool buffEnd ()
//	{
////		initHitCount ();
//		return base.buffEnd ();
//	}
//
//	void brothersBuff(){
//
//		initHitCount ();
//
//
//		RaycastHit2D[] hits = Physics2D.BoxCastAll(m_character.transform.position, new Vector2(2 * Camera.main.orthographicSize * Camera.main.aspect, 2 * Camera.main.orthographicSize), 0f, Vector2.zero);
//
//		foreach(RaycastHit2D hit in hits){
//			try{
//				if(hit.collider.GetComponent<ICharacterInterface>().team == m_character.team){
//					m_hitCount++;
//					if(m_hitCount >= m_count){
//						break;
//					}
//				}
//			}
//			catch{
//			}
//		}
//
//		//Debug.Log("전우애 : " + m_hitCount);
//
//		if (m_hitCount > 0) {
//			for(int i = 0; i < valueState.Length; i++){
//				valueState[i].percent = valueState[i].defaultPercent * (float)m_hitCount;
//                //Debug.Log("addpercent : " + valueState[i].percent);
//				m_character.addState.setValue (valueState[i]);
//				//Debug.Log("setdamage : " + m_addState.valueCalculator(100f, valueState[i]));
//			}
//		}
//
//	}
//
//	void initHitCount(){
//		if (m_hitCount > 0) {
//			for(int i = 0; i < valueState.Length; i++){
//                valueState[i].percent = valueState[i].defaultPercent * (float)m_hitCount;
//                //Debug.Log("rempercent : " + valueState[i].percent);
//
//				m_character.addState.returnValue (valueState[i]);
//				//Debug.Log("returndamage : " + m_addState.valueCalculator(100f, valueState[i]));
//			}
//		}
//	}


	void OnTriggerEnter2D(Collider2D col){
		if (PrepClass.isCharacterTag (col.tag)) {
			if (col.GetComponent<ICharacterInterface> () != ownerCharacter) {
				if (col.GetComponent<ICharacterInterface> ().team == transform.parent.GetComponent<ICharacterInterface> ().team) {
					if (m_count < m_maxCount) {
						m_count++;
						brothersBuff ();
					}
				}
			}
		}
	}

	void OnTriggerExit2D(Collider2D col){
		if (PrepClass.isCharacterTag (col.tag)) {
			if (col.GetComponent<ICharacterInterface> () != ownerCharacter) {
				if (col.GetComponent<ICharacterInterface> ().team == transform.parent.GetComponent<ICharacterInterface> ().team) {
					if (!col.GetComponent<ICharacterInterface> ().isDead) {
						if (m_count > 0) {
							m_count--;
							brothersBuff ();
						}
					}
				}
			}
		}
	}

	void brothersBuff(){
		if (m_count > 0) {
			for(int i = 0; i < valueState.Length; i++){
				valueState[i].value = valueState[i].defaultValue * (float)m_count;
//				Debug.Log ("valueState : " + valueState [i].value);
				actCharacter.addState.setValue (valueState[i], this);
			}
		}
	}

	void OnDrawGizmos(){
		Gizmos.color = Color.yellow;
		Gizmos.DrawWireSphere  (transform.position, range);
	}
	
}



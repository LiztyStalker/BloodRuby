//------------------------------------------------------------------------------
// <auto-generated>
//     이 코드는 도구를 사용하여 생성되었습니다.
//     런타임 버전:4.0.30319.36388
//
//     파일 내용을 변경하면 잘못된 동작이 발생할 수 있으며, 코드를 다시 생성하면
//     이러한 변경 내용이 손실됩니다.
// </auto-generated>
//------------------------------------------------------------------------------
using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using UnityEngine.UI;
public class UITicketDataClass : MonoBehaviour
{
	[SerializeField] Text m_leftText;
	[SerializeField] Text m_rightText;
	[SerializeField] Text m_mapNameText;
	[SerializeField] Text m_timeText;
	[SerializeField] Text m_modeText;
	[SerializeField] UIMinimapFlagClass m_flagToggle;
	[SerializeField] GameObject m_flagPanel;



	Dictionary<UIMinimapFlagClass, CaptureObjectClass> m_flagData;


	public void gameUpdate(GameControllerClass ctrler){
		//게임화면
		//미니맵 화면
		if(m_mapNameText != null)
			m_mapNameText.text = TranslatorClass.GetInstance.mapTranslator(ctrler.mapData.mapKey);

		if(m_modeText != null)
			m_modeText.text = TranslatorClass.GetInstance.modeTranslator(ctrler.mode);

        if (m_flagPanel != null)
        {

            //미니맵 패널에 있는 토글 버튼을 사용할 필요가 있음
            if (m_flagData == null)
            {
                m_flagData = new Dictionary<UIMinimapFlagClass, CaptureObjectClass>();
                int i = 0;
                foreach (CaptureObjectClass flag in ctrler.mapData.flags)
                {


                    UIMinimapFlagClass flagBtn = (UIMinimapFlagClass)Instantiate(m_flagToggle);
                    flagBtn.transform.SetParent(m_flagPanel.transform);

                    if (!flag.isCaptured)
                        flagBtn.setCaptureName(flag.name, "-");
                    else
                        flagBtn.setCaptureName(flag.name, ((char)('A' + i++)).ToString());


                    flagBtn.setFlagView(flag, TYPE_TEAM.ENEMY);
                    //flag.addFlagDelegate(flagBtn.flagSet);

                    //깃발 리스트에 삽입
                    m_flagData.Add(flagBtn, flag);
                }
            }
            else
            {
                foreach (UIMinimapFlagClass flag in m_flagData.Keys)
                {
                    flag.setFlagView(m_flagData[flag], TYPE_TEAM.ENEMY);
                }
            }
        }
       

        if (m_leftText != null)
        {
            m_leftText.text = ctrler.ticketScore[(int)TYPE_TEAM.TEAM_0].ToString();
            m_leftText.color = PrepClass.getFlagColor(TYPE_TEAM.TEAM_0);
        }

        if (m_rightText != null)
        {

            m_rightText.text = ctrler.ticketScore[(int)TYPE_TEAM.TEAM_1].ToString();
            m_rightText.color = PrepClass.getFlagColor(TYPE_TEAM.TEAM_1);
        }
		
		
        if(m_timeText != null)
    		m_timeText.text = ctrler.time.ToString();

	}


}



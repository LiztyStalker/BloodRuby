//------------------------------------------------------------------------------
// <auto-generated>
//     이 코드는 도구를 사용하여 생성되었습니다.
//     런타임 버전:4.0.30319.36373
//
//     파일 내용을 변경하면 잘못된 동작이 발생할 수 있으며, 코드를 다시 생성하면
//     이러한 변경 내용이 손실됩니다.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using UnityEngine;
using System.Linq;

public class EquipmentFactoryClass : SingletonClass<EquipmentFactoryClass>
{
//	[SerializeField] EquipmentClass[] m_equipmentList;


	readonly string[] directory = { "Weapon", "Armor", "Accessery" };
	readonly string path = "Prefebs/Factory/Equipment/";

	List<EquipmentClass> m_equipmentList = new List<EquipmentClass>();



	public EquipmentFactoryClass(){
		Start ();
	}

	void Start(){

		foreach (string str in directory) {
			EquipmentClass[] equipments = Resources.LoadAll <EquipmentClass> (string.Format("{0}{1}", path, str));

			if (equipments.Length > 0) {
				m_equipmentList.AddRange (equipments.ToList<EquipmentClass> ());
			}
		}

		Debug.Log ("equipmentCount : " + m_equipmentList.Count);
	}



	public EquipmentClass getEquipment(TYPE_MOS mos, TYPE_EQUIPMENT equipType, int slot){
		//Debug.Log ("슬롯 : " + slot);
		try{
			return (EquipmentClass)((EquipmentClass)m_equipmentList.Where(equipData => equipData.mos[(int)mos] && equipData.equipType == equipType && equipData.isPrice).Skip(slot).First()).Clone();
		}
		catch{
			return null;
		}
	}
}



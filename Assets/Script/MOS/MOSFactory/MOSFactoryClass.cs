//------------------------------------------------------------------------------
// <auto-generated>
//     이 코드는 도구를 사용하여 생성되었습니다.
//     런타임 버전:4.0.30319.36373
//
//     파일 내용을 변경하면 잘못된 동작이 발생할 수 있으며, 코드를 다시 생성하면
//     이러한 변경 내용이 손실됩니다.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Linq;
using UnityEngine;
public class MOSFactoryClass : SingletonClass<MOSFactoryClass>
{

//	[SerializeField] MOSClass[] m_mosList;
	//Dictionary<TYPE_MOS, MOSClass> m_mosDic = new Dictionary<TYPE_MOS, MOSClass>();

	readonly string path = "Prefebs/Factory/MOS/";

	List<MOSClass> m_mosList = new List<MOSClass>();

	public MOSFactoryClass(){
		Start ();
	}

	void Start(){

		MOSClass[] moses = Resources.LoadAll <MOSClass> (string.Format("{0}", path));

		if (moses.Length > 0) {
			m_mosList.AddRange (moses.ToList<MOSClass> ());
		}
		Debug.Log ("MOSCount : " + m_mosList.Count);
	}


	/// <summary>
	/// 병과 가져오기
	/// </summary>
	/// <returns>The MOS.</returns>
	/// <param name="mos">Mos.</param>
	public MOSClass getMOS(TYPE_MOS mos){
		return (MOSClass)(m_mosList.Where (mosdata => mosdata.mos == mos).SingleOrDefault ()).Clone();
	}

}


